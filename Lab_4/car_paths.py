from typing import List


def car_paths(n: int, m: int) -> List[List[int]]:
    """
    Просчитать количество маршрутов до каждой клетки с учетом возможных перемещений.

    :param n: Количество строк в таблице
    :param m: Количество столбцов в таблице

    :return: Новую таблицу с посчитанным количеством маршрутов в каждую клетку
    """
    dp = [[0] * m for _ in range(n)]  # создаем двумерный список m * n
    for i in range(n):
        for j in range(m):
            if i == 0 or j == 0:  # случай, когда существует только один маршрут вниз или вправо
                dp[i][j] = 1
            else:  # случай, когда мы можем добраться до клетки (i, j) из трех возможных предыдущих клеток
                dp[i][j] = dp[i - 1][j] + dp[i][j - 1] + dp[i - 1][j - 1]
    return dp


if __name__ == '__main__':
    paths = car_paths(4, 2)
    print(paths[-1][-1])  # 7
